
// ******* A N O T A C I O N E S ********** //
/**
 * @api {GET} /anotaciones/:idCarrera Listar Anotaciones
 * @apiDescription Retorna el listado de ejemplares ratificados en una carrera particular,
 * en caso de no existir la carrera, se retorna el código HTTP 404.
 * @apiName GetAnotaciones
 * @apiGroup Anotaciones
 * @apiParam {Integer} idCarrera Id de la carrera a consultar
 * @apiParamExample {String} /anotaciones/293
 *  { "id": 20, "tipo_doc_caballeriza": "C.I", "num_doc_caballeriza": "8549655", "fecha_carrera": "2019-12-31",
 * "carrera_id": 45, "kg_programa": 57.0, "kg_reales": 56.9, "cod_hip": "HIPSI", "nombre_premio": "RASPAIL I",
 * "tomo": "1169", "folio": "115", "nombre_ejemplar": "GALICIA GOLD",
 * "tipo_doc_cuidador": "D.U", "num_doc_cuidador": "8291211", "tipo_doc_jockey": "C.I", "num_doc_jockey": "38180140",
 * "tipo_doc_capataz": "D.U", "num_doc_capataz": "14915854", "tipo_doc_peon": "D.U", "num_doc_peon": "8320828",
 * "tipo_doc_sereno": "D.U", "num_doc_sereno": "94626747", "puesto": 0, "orden": "", "partida": "", "tiro": 1},
 * { "id": 21, "tipo_doc_caballeriza": "C.I", "num_doc_caballeriza": "8549655", "fecha_carrera": "2019-12-31",
 * "carrera_id": 45, "kg_programa": 57.0, "kg_reales": 56.7, "cod_hip": "HIPSI", "nombre_premio": "RASPAIL I",
 * "tomo": "1161", "folio": "311", "nombre_ejemplar": "MALVADO SERIAL",
 * "tipo_doc_cuidador": "D.U", "num_doc_cuidador": "8291211", "tipo_doc_jockey": "C.I", "num_doc_jockey": "388391789",
 * "tipo_doc_capataz": "D.U", "num_doc_capataz": "14915854", "tipo_doc_peon": "D.U", "num_doc_peon": "8320828",
 * "tipo_doc_sereno": "D.U", "num_doc_sereno": "94626747", "puesto": 0, "orden": "", "partida": "", "tiro": 1},
 * @apiSuccess {Integer} id Id de la anotación
 * @apiSuccess {String} tipo_doc_caballeriza Tipo de Documento de la caballeriza ['C.I', 'D.U', 'L.C', 'L.E', 'MAQ', 'PAS']
 * @apiSuccess {String} num_doc_caballeriza Número de documento de la caballeriza
 * @apiSuccess {Date} fecha_carrera Fecha y Hora programada para la carrera
 * @apiSuccess {Integer} carrera_id Id de la carrera de la anotación
 * @apiSuccess {Float} kg_programa Kilogramos de programa
 * @apiSuccess {Float} kg_reales Kilogramos reales
 * @apiSuccess {String} cod_hip Código del hipódromo
 * @apiSuccess {String} nombre_premio Nombre del Premio
 * @apiSuccess {String} tomo Número de tomo del ejemplar
 * @apiSuccess {String} folio Número de folio del ejemplar
 * @apiSuccess {String} nombre_ejemplar Nombre del ejemplar anotado/ratificado
 * @apiSuccess {String} tipo_doc_cuidador Tipo de documento del cuidador
 * @apiSuccess {String} num_doc_cuidador Nombre del cuidador del ejemplar
 * @apiSuccess {String} tipo_doc_jockey  Tipo de documento del jockey
 * @apiSuccess {String} num_doc_jockey Nombre del jockey
 * @apiSuccess {String} tipo_doc_capataz Tipo de documento del capataz
 * @apiSuccess {String} num_doc_capataz Nombre del capataz
 * @apiSuccess {String} tipo_doc_peon Tipo de documento del peon
 * @apiSuccess {String} num_doc_peon Nombre del peon
 * @apiSuccess {String} tipo_doc_sereno Tipo de documento del sereno
 * @apiSuccess {String} num_doc_sereno Nombre del sereno
 * @apiSuccess {Integer} puesto Puesto en que finalizó el ejemplar en la carrera
 * @apiSuccess {String} orden Número con el que va identificado el ejemplar en la carrera
 * @apiSuccess {Integer} partida Número de partidor en la carrera
 * @apiSuccess {Boolean} tiro Define si el ejemplar va de tiro o no
 * @apiError (Error 404) {json} CarreraNoExiste El <code>id</code> de la carrera no existe en la base de datos.
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 404 Not Found
 *     {
 *       "error": "CarreraNoExiste"
 *     }
 */
// ******* F I N   A N O T A C I O N E S ********** //


// **********  C A B A L L O S **********//
/**
 * @api {GET} /caballos/:tomo/:folio Detalle de caballo
 * @apiDescription Retorna el detalle de un caballo identificada por tomo y folio,
 * si no existe el ejemplar se retorna un error HTTP 404.
 * @apiName GetCaballo
 * @apiGroup Caballo
 * @apiParam  {String} tomo Tomo que identifica al ejemplar
 * @apiParam  {String} folio Folio que identifica al ejemplar
 * @apiParamExample {String} /caballos/1103/871/
 * { "id": 14318, "tomo": "1103", "folio": "871", "nombre": "LID PASSIONERO",
 * "fecha_nacimiento": "2004-12-30", "fecha_muerte": "2005-01-15",
 * "ganadas_comunes": 5, "ganadas_clasicos": 0, "ganadas_grupo": 1, "ganadas_internacionales": 1, "ganadas_series": 1
 * }
 * @apiSuccess {String} id Id del caballo
 * @apiSuccess {String} tomo Tomo que identifica al ejemplar
 * @apiSuccess {String} folio Folio que identifica al ejemplar
 * @apiSuccess {String} nombre Nombre del ejemplar
 * @apiSuccess {Date} fecha_nacimiento Fecha de nacimiento del ejemplar
 * @apiSuccess {Date} fecha_muerte Fecha de muerte del ejemplar
 * @apiSuccess {Integer} ganadas_comunes Cantidad de carreras comunes ganadas
 * @apiSuccess {Integer} ganadas_clasicos Cantidad de clásicos ganadas
 * @apiSuccess {Integer} ganadas_grupo Cantidad de carreras de grupo ganadas
 * @apiSuccess {Integer} ganadas_internacionales Cantidad de carreras internacionales ganadas
 * @apiSuccess {Integer} ganadas_series Cantidad de carreras de series ganadas
 * @apiError (Error 404) {json} CaballoNoExiste La combinación de <code>tomo</code> y <code>folio</code> del caballo no existe
 * en la base de datos.
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 404 Not Found
 *     {
 *       "error": "CaballoNoExiste"
 *     }
 */

// ********** F I N   C A B A L L O S **********//


// ********** C A R R E R A S **********//
/**
 * @api {GET} /carreras/:idCarrera Detalle de carrera
 * @apiDescription Retorna el detalle de una carerra específica, en caso de no existir el id de la carrera, se retorna un error HTTP 404.
 * @apiName GetCarreras
 * @apiGroup Carreras
 * @apiParam  {Integer} idCarrera Id que identifica a la carrera.
 * @apiParamExample {Integer} /carreras/1
 * {"id": 2, "fecha": "2016-09-13 10:00:00", "numero": "2", "nombre": "AL VINO VINO 1994", "reunion": "28", "tipo": "M",
 "pista": "RCN", "distancia": 1200, "monto_premio": "19152.00", "edad_desde": 5, "edad_hasta": 6, "sexo": "H",
 "ganadas_desde": 1, "ganadas_hasta": 5, "kilos": "57.00", "tiempo": "05:21:118"  }
 * @apiSuccess {String} id Id de la Carrera
 * @apiSuccess {DateTime} fecha Fecha y hora de la carrera
 * @apiSuccess {Integer} numero Número de la carrera
 * @apiSuccess {String} nombre Nombre de la carrera
 * @apiSuccess {String} reunion Número de reunión a la que pertenece la carrera
 * @apiSuccess {String} tipo Tipo de carrera ['M', 'MJ', 'MA', 'C', 'MP', 'H', 'C2', 'C3', 'E']
 * @apiSuccess {String} pista Estado de la pista  ['CDI', 'RCN', 'RCO', 'PCO', 'PRE', 'CRE', 'CCO']
 * @apiSuccess {Integer} distancia Distancia de la carrera
 * @apiSuccess {Float} monto_premio Monto en pesos del premio
 * @apiSuccess {Integer} edad_desde Edad minima en años de los ejemplares que participan en la carrera
 * @apiSuccess {Integer} edad_hasta Edad máxima en años de los ejemplares que participan en la carrera
 * @apiSuccess {String} sexo Sexo de los ejemplares que participan en la carrera  ['H', 'M', 'T']
 * @apiSuccess {Integer} ganadas_desde Cantidad minima de carreras ganadas por el ejemplar para participar en la carrera
 * @apiSuccess {Integer} ganadas_hasta Cantidad máxima de carreras ganadas por el ejemplar para participar en la carrera
 * @apiSuccess {Float} kilos Kilos especificados en el programa
 * @apiSuccess {String} tiempo Tiempo registrado para el ganador de la carrera
 * @apiError (Error 404) {json} CarreraNoExiste El <code>id</code> de la carrera no existe en la base de datos.
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 404 Not Found
 *     {
 *       "error": "CarreraNoExiste"
 *     }
 */

/**
 * @api {GET} /carreras/porFecha/:fecha_inicio/:fecha_fin Listar Carreras por fecha
 * @apiDescription Retorna el listado de carreras entre dos fechas, ambas inclusive,
 * en caso de no existir carreras, se retorna un objeto JSON vacío.
 * @apiName GetCarrerasPorFecha
 * @apiGroup Carreras
 * @apiParam  {Date} fecha_inicio Fecha de inicio de la consulta en formato YYYY-MM-DD, inclusive.
 * @apiParam  {Date} fecha_fin Fecha de fin de la consulta en formato YYYY-MM-DD, inclusive.
 * @apiParamExample {Date} /carreras/porFecha/2016-09-13/2016-09-14
 * { "id": 1, "fecha": "2016-09-13 10:00:00", "numero": "1", "nombre": "GRAN MURALLA I", "reunion": "28", "tipo": "M",
"pista": "CDI", "distancia": 1200, "monto_premio": "23760.00", "edad_desde": 3, "edad_hasta": 3, "sexo": "H",
"ganadas_desde": 0, "ganadas_hasta": 0, "kilos": "56.00", "tiempo": "03:36:884" },
 {"id": 2, "fecha": "2016-09-14 10:00:00", "numero": "2", "nombre": "AL VINO VINO 1994", "reunion": "28", "tipo": "M",
 "pista": "RCN", "distancia": 1200, "monto_premio": "19152.00", "edad_desde": 5, "edad_hasta": 6, "sexo": "H",
 "ganadas_desde": 1, "ganadas_hasta": 5, "kilos": "57.00",  "tiempo": "05:46:224"  }
 * @apiSuccess {Object} Carreras Objeto JSON con los campos  'fecha', 'numero', 'nombre', 'reunion',
 'tipo', 'pista', 'distancia', 'monto_premio', 'edad_desde', 'edad_hasta', 'sexo',
 'ganadas_desde', 'ganadas_hasta', 'kilos', 'tiempo'
 * @apiSuccess {String} id Id de la Carrera
 * @apiSuccess {DateTime} fecha Fecha y hora de la carrera
 * @apiSuccess {Integer} numero Número de la carrera
 * @apiSuccess {String} nombre Nombre de la carrera
 * @apiSuccess {String} reunion Número de reunión a la que pertenece la carrera
 * @apiSuccess {String} tipo Tipo de carrera ['M', 'MJ', 'MA', 'C', 'MP', 'H', 'C2', 'C3', 'E']
 * @apiSuccess {String} pista Estado de la pista  ['CDI', 'RCN', 'RCO', 'PCO', 'PRE', 'CRE', 'CCO']
 * @apiSuccess {Integer} distancia Distancia de la carrera
 * @apiSuccess {Float} monto_premio Monto en pesos del premio
 * @apiSuccess {Integer} edad_desde Edad minima en años de los ejemplares que participan en la carrera
 * @apiSuccess {Integer} edad_hasta Edad máxima en años de los ejemplares que participan en la carrera
 * @apiSuccess {String} sexo Sexo de los ejemplares que participan en la carrera  ['H', 'M', 'T']
 * @apiSuccess {Integer} ganadas_desde Cantidad minima de carreras ganadas por el ejemplar para participar en la carrera
 * @apiSuccess {Integer} ganadas_hasta Cantidad máxima de carreras ganadas por el ejemplar para participar en la carrera
 * @apiSuccess {Float} kilos Kilos especificados en el programa
 * @apiSuccess {String} tiempo Tiempo registrado para el ganador de la carrera
 */
// ********** F I N   C A R R E R A S **********//